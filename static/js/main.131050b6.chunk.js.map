{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","SearchBox","placeholder","handleSearch","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","console","log","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAEaA,EAAK,SAACC,GACd,OAEG,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAASC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACzB,6BAAKL,EAAMI,QAAQE,WCHdC,G,MAAS,SAACP,GAEnB,OAGG,qBAAKC,UAAU,YAAf,SAGYD,EAAMQ,SAASC,KAAK,SAAAL,GAAO,OAEnB,cAAC,EAAD,CAAwBA,QAASA,GAAtBA,EAAQC,WCC/BK,EAZC,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEZ,uBAAOC,KAAK,SACZZ,UAAU,SACTU,YAAaA,EAEZG,SAAUF,KC0CDG,E,kDA9Cb,aAAc,IAAD,8BACX,gBAYFC,aAAa,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZpC,EAAKC,MAAM,CACTd,SAAS,GACTW,YAAY,IAJH,E,qDAOb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACV,SAASmB,S,oBAMzC,WAEE,MAA6BC,KAAKN,MAA3Bd,EAAP,EAAOA,SAASW,EAAhB,EAAgBA,YACVU,EAAiBrB,EAASsB,QAAO,SAAA1B,GAAO,OAC5CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OADEE,QAAQC,IAAIL,GAEZ,sBAAK5B,UAAU,MAAf,UAEE,kDAEA,cAAC,EAAD,CACAU,YAAY,iBAEZC,aAAcgB,KAAKZ,eAEnB,cAAC,EAAD,CAAUR,SAAUqB,W,GAlCRM,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.131050b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card=(props)=>{\r\n     return(\r\n      \r\n        <div className='card-container'>\r\n            <img alt='Monster'src={`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n        <h1>{props.monster.name}</h1>\r\n    </div>\r\n     )\r\n    \r\n    \r\n\r\n}","import React from 'react';\r\n\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\nexport const CardList=(props)=>{\r\n    \r\n    return(\r\n       \r\n       \r\n       <div className='card-list'>\r\n           \r\n               {\r\n                   props.monsters.map( monster=>\r\n                       (\r\n                           <Card key={monster.id}  monster={monster}  />\r\n                       )\r\n                   \r\n\r\n                   )\r\n               }\r\n               \r\n              \r\n            \r\n           \r\n       </div>\r\n      \r\n         \r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nconst SearchBox=({placeholder,handleSearch})=>(\r\n  \r\n    <input type=\"search\"\r\n    className=\"search\"\r\n     placeholder={placeholder}\r\n      \r\n      onChange={handleSearch}\r\n      \r\n      />\r\n\r\n)\r\n\r\nexport default SearchBox;","import React from 'react';\nimport './App.css';\nimport {CardList} from './component/card-list/card-list.component';\nimport SearchBox from './component/search-box/search-box.component';\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      monsters:[ ],\n      searchField:''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n\n  handleChange=(e)=>{\n    this.setState({searchField:e.target.value})\n  }\nrender(){\n\n  const {monsters,searchField}=this.state;\n  const filteredMonsters=monsters.filter(monster=>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    console.log(filteredMonsters);\n  return(\n    <div className=\"App\">\n      \n      <h1>Monsters Rolodex</h1>\n      \n      <SearchBox\n      placeholder=\"Monster Search\"\n\n      handleSearch={this.handleChange} />\n\n      <CardList monsters={filteredMonsters}/>\n\n\n    </div>\n  )\n}\n\n\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}